#include <iostream>
#include <cstdio>
#include <cmath>
#include <bits/stdc++.h>

using namespace std;

int binToInt(string bin, int size)
{
    int total = 0;

    for(int i = 0; i < size; i++)
    {
        if(bin[i] == '1')
            total += pow(2, ((size - 1) - i));
    }
    return total;
}

string cycleArray(string binArray, int size)
{
    char tmp = binArray[0];

    for(int i = 0; i < size -1; i++)
    {
        binArray[i] = binArray[i +1];
    }
    
    binArray[size - 1] = tmp;

    return binArray;
}

int cycleShifts(string binArray, int size, int cycles)
{
    int count = 0;
    int cycleCount = 1;
    int max = binToInt(binArray, size);
    string copyArray = binArray;

    for(int i = 0; i < size; i++)
    {
        while(cycleCount != cycles)
        {
        string tmpArray = cycleArray(copyArray, size);
        int temp = binToInt(tmpArray, size);

        if(temp > max)
            max = temp;
        else if(temp == max)
            cycleCount++;

        copyArray = tmpArray;
        count++;
        }
        return count;
    }
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int numTrials;
    cin >> numTrials;

    for(int i = 0; i < numTrials; i++)
    {
        int binarySize, kTimes;
        cin >> binarySize >> kTimes;
        string binaryArray;
        cin >> binaryArray;
        int shifts = cycleShifts(binaryArray, binarySize, kTimes);
        cout << shifts << "\n";
    }
    return 0;
}

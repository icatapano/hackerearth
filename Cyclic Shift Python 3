# Find the max value for the binary string and return that value
def valueB(binary):
    max = 0
    start = binary
    while(True):
        if(int(binary, 2) > max):
            max = int(binary,2)
        binary = binary[1:] + binary[0:1]
        if(binary == start):
            break
    return max

# Count the number of shifts to reach the max value for the binary with the required number of cycles
def numOfShifts(binary, valB, cycles):
    counter = 0
    cycleCounter = 0

    while(True):
        if(int(binary, 2) == valB):
            cycleCounter += 1
        if(cycleCounter == cycles):
            break
        binary = binary[1:] + binary[0:1]
        counter += 1
    
    print(counter)
    return

# Main Function
numTrials = int(input())
for x in range(numTrials):  
    arr = []
    arr = input().split()
    str = input()
    tarCycle = int(arr[1])
    tarB = valueB(str)
    numOfShifts(str, tarB, tarCycle)
